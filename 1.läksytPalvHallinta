<html>
<meta charset="UTF-8">
<body>

<h1>Teron Läksyt Vol 1.</h1>

<h3> Karvinen 2021: Salt Run Command Locally - Jere Liitsola </h3>

<p1>
    • Saltin avulla voidaan hallita tietokoneita
</p1>
<p1>
    • Salt komentojen paikallinen ajo on käytännöllistä esimerkiksi. harjoitteluun ja testaamiseen
</p1>    
<p>    • Tärkeimmät tilafunktiot ovat pkg,file, service, user ja cmd </p>
<p>    • pkg:llä asennetaan erilaisia ohjelmistoja ja file:llä hallitaan tiedostoja </p>
<p>    • service:llä hallitaan palveluita ja user:llä käyttäjiä </p>
<p>    • cmd.run:lla ajetaan komentoja, kommennon oltava idempotentti ja ajettava vain tarvittaessa
</p1>


<h3>
SaltStack-  ’’Tutorial’’
</h3>

<p>    • SaltStackin konfigurointi hallinta mahdollistaa sovelluksien, tiedostojen ja muitten asetuksien määrittelyn tietylle systeemille. Systeemiä verrataan jatkuvasti konfiguraatioon ja muutoksia tehdään tarvittaessa. </p>
<p>    • Salt state funktio ’’dokumentit’’ ovat paras paikka käytettävissä olevien funktioiden ja argumenttien löytämiseksi </p>

<p>    • Funktiot ovat SaltStackin tärkeimmät hallintakeinot </p>

<p>    • Funktiot ovat erittäin monipuolisia. Niiden avulla voidaan esim. luoda hakemistoja, määrittää palveluja, lisätä käyttäjiä ja ajaa ’execution’ funktioita. </p>

<p>    • Funktiot koostuvat ID:stä, moduuli funktiosta ja argumenteistä </p>

<p>    • Saltissa on sisäänrakennettu palvelin, jonka avulla voidaan siirtää tiedostoja/hakemistoja halutuille koneille. </p>

<h3> Command Line Basics Revisited </h3>

<p>    • Yleisimpiä komentoja liikkumiseen/tutkimiseen esim. pwd, cd .., cd [polku], ls ja less [haluttu tiedosto] </p> 
<p>    • Tiedostoja voidaan hallita mm. mkdir, touch, nano ja rm komennoilla. </p> 
<p>    • /var/log/ hakemistosta löytyy järjestelmälokit. Esimerkiksi. syslog tai error lokeja. </p> 

<h3> Tehtävät A-G </h3>

<p>    a) cat /etc/os-release komennolla saadaan tiedot kaikki käyttöjärjestelmään liittyvät tiedot. Itsellä käytössä ’’Debian GNU/Linux 11 (bullseye)’’ Komennolla ’’apt-cache policy salt-common/salt-minion’’ saadaan selville saltin yleinen- ja ’orja’- versio. </p> 
<p>    b) Aloitetaan luomalla ’’hellojere’’- niminen kansio Salt hakemiston alle. ’’sudo mkdir -p /srv/salt/hellojere/. Tämän jälkeen muokataan tiedoston sisältöä sudoedit komennolla: sudoedit /srv/salt/hellojere/init.sls. Kirjoitetaan tiedostoon </p> 

<p>/tmp/Hei Saltin Maailma.txt:
<p>	file.managed </p> 
<p>Lopuksi luodaan tiedosto saltin avulla: ’’sudo salt-call –local state.apply hellojere’’ Tiedostossa nähdään ’’new:’’ kohdan alapuolella: ’’file /tmp/Hei Saltin maailma.txt created’’</p>
<p>    c) Koneen kaikki tiedot saadaan komennolla: ’’sudo salt-call –local grains.items’’. ’’Tärkeimpiä’’ saatuja tietoja voivat olla esimerkiksi. verkko osoitteet, käyttöjärjestelmä, salt-versio, ip- osoitteet sekä domain nimi. Esimerkiksi minun koneeni käyttää ipv4: 192.168.32.124,  os:debian, saltversion: 3002.6 ja domain: jereliits </p> 

<p>    d) Komennolla voidaan hakea myös pelkästään tiettyä informaatiota. Luodaan komento joka listaa: käyttöjärjestelmän, dns- palvelintiedot, ipv4 tiedot, saltversion ja domain nimen. Tässä tapauksessa ’’sudo salt-call local grains.item os dns ipv4 saltversion domain’’ </p> 
<p>    e) Luodaan oma konfiguraatio, jossa on useampia tilafunktiota samassa tiedostossa. Aloitetaan luomalla kansio, jonka sisälle tiedosto: ’’sudo mkdir /srv/salt/omakoodi’’ ja ’’sudoedit /srv/salt/omakoodi/init.sls’’ tiedoston sisälle: </p> 
<p> Asenna apache2 ja varmista että se on käynnissä:</p> 
<p>  pkg.installed:</p> 
<p>name: apache2</p> 
<p>  service.running:</p> 
<p>-name: apache2</p> 
<p>Lopuksi ’’sudo salt-call –local state.apply omakoodi’’ , jonka tuloksena konfiguraatio tarkistaa onko apache2 käynnissä ja asennettuna paikallisella koneella.</p> 

<p>    f) Esimerkiksi komento ''sudo salt-call --local -l info state.single file.managed /tmp/hellojere" on idempotentti.Komento voidaan suorittaa monta kertaa, ilman että muutoksia tapahtuu. Tiedosto luodaan vain ja ainoastaan, jos sitä ei alun perin ole olemassa. </p> 
<p>    g) pkg.latest komennolla voidaan varmistaa, että valittu paketti on asennettu ja sillä on käytössä viimeisin versio. Tilafunktio siis tarvittaessa asentaa ja päivittää uusimpaan versioon </p>
<p>  file.exists komennolla voidaan varmistaa, että tietty tiedosto on olemassa.Haluttu polku ilmoitettava absoluuttisena. Esim. ''... file.exists /home/jereliits/public_html </p>
<p>  service.masked / service.unmasked komennoilla voidaan muokata palvelun käytettävyyttä.Masked tilassa palvelu ei ole käytössä </p>
<p>  Luodaan user funktiolla komento, joka luo käyttäjät matti ja pekka, näille kotihakemistot ja määrittelee käyttäjänimet uniikeiksi. </p>
<p> Ensin ''sudo mkdir -p /srv/salt/käyttäjät'' jonka jälkeen ''sudoedit /srv/salt/käyttäjät/init.sls'' </p>
<p><b> Tiedoston sisälle:</b> </p>
<p> Luodaan Pekalle ja Matille käyttäjät: </p>
<p> user.present: </p>
<p> - name: pekka </p>
<p> - home: /home/pekka </p>
<p> - unique: True </p>
<p> user.present: </p>
<p> - name: matti </p>
<p> - home: /home/matti </p>
<p> - unique: True </p>
<p> Tämän jälkeen ''sudo salt-call --local -l info state.apply käyttäjät'', joka ajaa komennon.


<p><b> Jere Liitsola <p></b>


</body>
</html>
